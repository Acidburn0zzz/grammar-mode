var keywords = [
  "package", "message"
]
var modifiers = [
  "required", "optional", "repeated", "reserved", "default", "extensions", "packed"
]
var types = [
  "bool", "bytes", "double", "float", "string",
  "int32", "int64", "uint32", "uint64", "sint32", "sint64", "fixed32", "fixed64", "sfixed32", "sfixed64"
];

grammar protobuf {
  Program { space Statement ! eof }
  
  Statement {
    kw["package"] identifier p[";"] |
    kw["message"] ident p["{"] Field!p["}"]
  }

  Field {
    modifier* type identifier p["="] number p[";"]
  }

  space { /s*/ }

  identifier { value=/\w+/ space }

  kw[value] { identifier:{$value == value} }
    
  type { identifier:{types.indexOf($value) > -1} }

  modifier { identifier:{modifiers.indexOf($value) > -1} }

  p[value] { value space }
}
